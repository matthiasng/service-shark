name:  build

on:
  push:
    branches:
      - master
  pull_request:
  
jobs:
  lint:
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1.2.0

      - name: Set up Go
        uses: actions/setup-go@v1.1.2
        with:
          go-version: 1.13.x

      - name: Install golangci-lint
        run: |
          go get github.com/golangci/golangci-lint/cmd/golangci-lint

      - name: Run linters
        run: |
          $env:PATH += ";$(go env GOPATH)/bin"  # temporary fix. See https://github.com/actions/setup-go/issues/14
          golangci-lint run

  test:
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1.2.0

      - name: Set up Go
        uses: actions/setup-go@v1.1.2
        with:
          go-version: 1.13.x

      - name: Run Unit tests.
        run: go test -v ./...

  coverage:
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1.2.0

      - name: Set up Go
        uses: actions/setup-go@v1.1.2
        with:
          go-version: 1.13.x

      - name: Run coverage
        run: go test -v -covermode=count -coverprofile coverage.out ./...

      - name: Upload Coverage report to CodeCov
        uses: codecov/codecov-action@v1.0.4
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.out

  build:
    runs-on: windows-latest
    needs: [lint, test]
    steps:
    - name: Checkout code
      uses: actions/checkout@v1.2.0

    - name: Set up Go
      uses: actions/setup-go@v1.1.2
      with:
        go-version: 1.13.x

    - name: build
      run: |
        $env:GOOS="windows"
        $env:GOARCH="amd64"
        go build -o bin/service-shark-amd64.exe
    - name: upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: binaries
        path: bin/
