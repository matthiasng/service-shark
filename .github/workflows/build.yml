name:  build

on:
  push:
    branches:
      - master
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  pull_request:
  
jobs:
  lint:
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1.2.0

      - name: setup go
        uses: actions/setup-go@v1.1.2
        with:
          go-version: 1.13.x

      - name: setup golangci-lint
        run: |
          go get github.com/golangci/golangci-lint/cmd/golangci-lint

      - name: run golangci-lint
        run: |
          $env:PATH += ";$(go env GOPATH)/bin"  # temporary fix. See https://github.com/actions/setup-go/issues/14
          golangci-lint run

  test:
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1.2.0

      - name: setup go
        uses: actions/setup-go@v1.1.2
        with:
          go-version: 1.13.x

      - name: run tests
        run: go test -v -covermode=count -coverprofile coverage.out ./...

      - name: upload coverage report to codecov
        uses: codecov/codecov-action@v1.0.4
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.out

  build:
    runs-on: windows-latest
    needs: [lint, test]
    steps:
    - name: checkout
      uses: actions/checkout@v1.2.0

    - name: setup go
      uses: actions/setup-go@v1.1.2
      with:
        go-version: 1.13.x

    - name: run goreleaser (--snapshot)
      uses: goreleaser/goreleaser-action@v1
      with:
        version: latest
        args: release --rm-dist --snapshot
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: binaries
        path: dist/

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1.2.0

      - name: setup go
        uses: actions/setup-go@v1.1.2
        with:
          go-version: 1.13.x

      - name: run goreleaser
        uses: goreleaser/goreleaser-action@v1
        with:
          version: latest
          args: release --rm-dist --debug
        env:
          GITHUB_TOKEN: ${{ secrets.SERVICE_SHARK_TOKEN }}